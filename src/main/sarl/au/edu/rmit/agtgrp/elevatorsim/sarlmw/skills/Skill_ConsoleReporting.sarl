/** 
 * 
 */
package au.edu.rmit.agtgrp.elevatorsim.sarlmw.skills

import io.sarl.core.Logging
import au.edu.rmit.agtgrp.elevatorsim.Direction

import au.edu.rmit.agtgrp.elevatorsim.sarlmw.capacities.Cap_Reporting

import java.util.List
import java.util.ArrayList

/** 
 * Skill for console-based reporting of elevator actions
 * Implementation of the Reporting capacity
 * @author Sebastian Sardina
 */
skill Skill_ConsoleReporting implements Cap_Reporting {
	uses Logging

    // Reporting log level
	val level : int
	val name : String
	
	new (l : int, name : String) {
		super() // Call the super's constructor
    	level = l // TODO this should probably be done with the Logging Capacity level
    	this.name = name
	}
	new (name : String) {
		super() // Call the super's constructor
		level = 0
		this.name = name
	}


	//	Check Varidic (varargs in java) arguments in SARL: http://www.sarl.io/docs/official/reference/general/FuncDecls.html
	private def info_with_agent(message : String, params : Object*) {
		
		// Extend params with the agent name
		var params2 : List<Object> = new ArrayList<Object>(params.size + 1)
		params2.addAll(params)
		params2.add(name)

		info("**{" + params.size + "}**: " + message, params2.toArray())
	}


	def reportTravellingTo(car : int, floor : int, dir : Direction = Direction.UNKNOWN) {
		if (level >= 0) {
			 info_with_agent("SENDING car {0} to floor {1} towards direction {2}.", car, floor, dir.toString)
		}
	}

	def reportArrivedAt(car : int, floor : int) {
		info_with_agent("Car {0} ARRIVED at floor {1}.", car, floor)
	}

	def reportLeavingFrom(car : int, floor : int, numPassengers : int) {
		if (level >= 0) {
			info_with_agent("Car {0} CLOSING DOOR at floor {1} with {2} passengers.", car, floor, numPassengers)
		}
	}

	def reportLeavingFrom(car : int, floor : int) {
		if (level >= 2) {
			info_with_agent("Car {0} CLOSING DOOR at floor {1}.", car, floor)
		}
	}

	def reportPersonEntered(car : int) {
		if (level >= 2) {
			info_with_agent("Someone ENTERED to car {0}.", car)
		}
	}

	def reportPersonExited(car : int) {
		if (level >= 2) {
			info_with_agent("Someone EXITED to car {0}.", car)
		}
	}

	def reportPassengerRequestedFloor(car : int, floor : int) {
		if (level >= 2) {
			info_with_agent("Someone wants to GET OFF at floor {0}.", car)
		}
	}
	
	def reportPersonRequestedService(floor : int, direction : Direction) {
		if (level >= 1) {
			info_with_agent("Someone REQUESTED SERVICE at at floor {0} towards direction {1}.", floor, direction.toString)
		}
	}

	def reportMessage(message : String, params : Object*) {
		if (level >= 3) {
			info_with_agent(message, params)
		}
	}

}
